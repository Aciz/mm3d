      <h1> Overview </h1>

      <p>
      This is a guide to the Misfit Model 3D scripting language.  It includes
      only functions that are specific to Misfit Model 3D.  Standard lua
      control structures and functions are not documented here.
      </p>

      <p>
      For more information on using the scripting language, you may also want
      to review the <a href="olh_scriptguide.html">Scripting Guide</a>.
      </p>

      <h1> Contents </h1>

<ul>
<li> <a href="#anchor0">General</a>
<ul>
<li> <a href="#anchor1">modelGetName</a>
<li> <a href="#anchor2">modelSaveAs</a>
<li> <a href="#anchor3">modelGetVertexCount</a>
<li> <a href="#anchor4">modelGetFaceCount</a>
<li> <a href="#anchor5">modelGetGroupCount</a>
<li> <a href="#anchor6">modelGetJointCount</a>
<li> <a href="#anchor7">modelGetTextureCount</a>
<li> <a href="#anchor8">modelGetGroupByName</a>
<li> <a href="#anchor9">groupGetName</a>
<li> <a href="#anchor10">modelGetTextureByName</a>
<li> <a href="#anchor11">textureGetName</a>
<li> <a href="#anchor12">textureGetFilename</a>
</ul>
<li> <a href="#anchor13">Primitive Creation</a>
<ul>
<li> <a href="#anchor14">modelCreateMeshRectangle</a>
<li> <a href="#anchor15">modelCreateBoneJoint</a>
<li> <a href="#anchor16">vertexSetCoords</a>
<li> <a href="#anchor17">modelAddTexture</a>
<li> <a href="#anchor18">vertexSetCoords</a>
<li> <a href="#anchor19">faceSetTextureCoords</a>
</ul>
<li> <a href="#anchor20">Selection manipulation</a>
<ul>
<li> <a href="#anchor21">selectedRotate</a>
<li> <a href="#anchor22">selectedTranslate</a>
<li> <a href="#anchor23">selectedScale</a>
<li> <a href="#anchor24">selectedApplyMatrix</a>
<li> <a href="#anchor25">selectedWeldVertices</a>
<li> <a href="#anchor26">selectedInvertNormals</a>
<li> <a href="#anchor27">selectedGroupFaces</a>
<li> <a href="#anchor28">selectedAddToGroup</a>
</ul>
<li> <a href="#anchor29">Animation</a>
<ul>
<li> <a href="#anchor30">modelCreateAnimation</a>
<li> <a href="#anchor31">setAnimByIndex</a>
<li> <a href="#anchor32">setAnimByName</a>
<li> <a href="#anchor33">animSetFrame</a>
<li> <a href="#anchor34">animGetCount</a>
<li> <a href="#anchor35">animGetName</a>
<li> <a href="#anchor36">animGetFrameCount</a>
<li> <a href="#anchor37">animSetName</a>
<li> <a href="#anchor38">animSetFrameCount</a>
<li> <a href="#anchor39">animSetFPS</a>
<li> <a href="#anchor40">animClearFrame</a>
<li> <a href="#anchor41">animCopyFrame</a>
</ul>
<li> <a href="#anchor42">Animation set manipulation</a>
<ul>
<li> <a href="#anchor43">animMove</a>
<li> <a href="#anchor44">animCopy</a>
<li> <a href="#anchor45">animSplit</a>
<li> <a href="#anchor46">animJoin</a>
<li> <a href="#anchor47">animConvertToFrame</a>
</ul>
<li> <a href="#anchor48">Mode-specific animation manipulations</a>
<ul>
<li> <a href="#anchor49">skelAnimSetKeyframe</a>
<li> <a href="#anchor50">skelAnimDeleteKeyframe</a>
<li> <a href="#anchor51">frameAnimSetVertex</a>
</ul>
<li> <a href="#anchor52">Selection</a>
<ul>
<li> <a href="#anchor53">modelSelectAll</a>
<li> <a href="#anchor54">modelSelectAllVertices</a>
<li> <a href="#anchor55">modelSelectAllFaces</a>
<li> <a href="#anchor56">modelSelectAllGroups</a>
<li> <a href="#anchor57">modelSelectVertices</a>
<li> <a href="#anchor58">modelSelectVertex</a>
<li> <a href="#anchor59">modelSelectFace</a>
<li> <a href="#anchor60">modelSelectGroup</a>
<li> <a href="#anchor61">modelSelectJoint</a>
<li> <a href="#anchor62">modelUnselectAll</a>
</ul>
<li> <a href="#anchor63">Logging</a>
<ul>
<li> <a href="#anchor64">logDebug</a>
<li> <a href="#anchor65">logWarning</a>
<li> <a href="#anchor66">logError</a>
</ul>
</ul>
<a name="anchor0"><hr>
<h2>General</h2>
<a name="anchor1"><hr>

<h3> modelGetName </h3>

<p>
<b> Descritption: </b> Get the filename of the model
</p>

Arguments:
<ul>
<li> None
</ul>

Returns:
<ul>
<li> <b> string </b> - filename (or empty string)
</ul>

<p>
<b> Notes: </b> If the model does not have a filename this function
will return an empty string.
</p>

<a name="anchor2"><hr>

<h3> modelSaveAs </h3>

<p>
<b> Descritption: </b> Save the model as a specified format.
</p>

Arguments:
<ul>
<li> <b> string format </b> - Format to save as (file extension)
</ul>

Returns:
<ul>
<li> <b> string </b> - filename
</ul>

<p>
<b> Notes: </b> Existing files will not be over-written.  If writing
the file in the specified format would cause an over-write, a number is
added to the filename and incremented until the filename is unique.
</p>

<a name="anchor3"><hr>

<h3> modelGetVertexCount </h3>

<p>
<b> Descritption: </b> Get the number of vertices in the model.
</p>

Arguments:
<ul>
<li> None
</ul>

Returns:
<ul>
<li> <b> int </b> - number of vertices
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor4"><hr>

<h3> modelGetFaceCount </h3>

<p>
<b> Descritption: </b> Get the number of faces (polygons (triangles)) in the model.
</p>

Arguments:
<ul>
<li> None
</ul>

Returns:
<ul>
<li> <b> int </b> - number of faces
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor5"><hr>

<h3> modelGetGroupCount </h3>

<p>
<b> Descritption: </b> Get the number of polygon groups in the model.
</p>

Arguments:
<ul>
<li> None
</ul>

Returns:
<ul>
<li> <b> int </b> - number of groups
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor6"><hr>

<h3> modelGetJointCount </h3>

<p>
<b> Descritption: </b> Get the number of bone joints in the model.
</p>

Arguments:
<ul>
<li> None
</ul>

Returns:
<ul>
<li> <b> int </b> - number of bone joints
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor7"><hr>

<h3> modelGetTextureCount </h3>

<p>
<b> Descritption: </b> Get the number of textures in the model.
</p>

Arguments:
<ul>
<li> None
</ul>

Returns:
<ul>
<li> <b> int </b> - number of textures
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor8"><hr>

<h3> modelGetGroupByName </h3>

<p>
<b> Descritption: </b> Get the ID of a group from its name.
</p>

Arguments:
<ul>
<li> <b> string name </b> - Name of group
</ul>

Returns:
<ul>
<li> <b> int </b> - Group ID (-1 if not found)
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor9"><hr>

<h3> groupGetName </h3>

<p>
<b> Descritption: </b> Get the name of the specified group.
</p>

Arguments:
<ul>
<li> <b> int groupID </b> - ID number of group
</ul>

Returns:
<ul>
<li> <b> string </b> - Name of group
</ul>

<p>
<b> Notes: </b> IDs of any type are integers from zero to count-1 inclusive.
Negative numbers are invalid.
</p>

<a name="anchor10"><hr>

<h3> modelGetTextureByName </h3>

<p>
<b> Descritption: </b> Get the ID of a texture from its name.
</p>

Arguments:
<ul>
<li> <b> string name </b> - Name of texture
</ul>

Returns:
<ul>
<li> <b> int </b> - Texture ID (-1 if not found)
</ul>

<p>
<b> Notes: </b> In most circumstances the name of the texture is the 
filename without its
full path or extension.  The exeption to this is if the model did not 
have textures explicitly associated with it and the model filter had
to guess at texture file names.  In this case the texture name will
be the texture filename including the extension, but without the full path.
</p>

<a name="anchor11"><hr>

<h3> textureGetName </h3>

<p>
<b> Descritption: </b> Get the name of the specified texture.
</p>

Arguments:
<ul>
<li> <b> int textureID </b> - ID number of texture
</ul>

Returns:
<ul>
<li> <b> string </b> - Name of texture
</ul>

<p>
<b> Notes: </b> IDs of any type are integers from zero to count-1 inclusive.
Negative numbers are invalid.
</p>

<a name="anchor12"><hr>

<h3> textureGetFilename </h3>

<p>
<b> Descritption: </b> Get the filename of the specified texture.
</p>

Arguments:
<ul>
<li> <b> int textureID </b> - ID number of texture
</ul>

Returns:
<ul>
<li> <b> string </b> - Filename of texture (full path)
</ul>

<p>
<b> Notes: </b> IDs of any type are integers from zero to count-1 inclusive.
Negative numbers are invalid.
</p>

<a name="anchor13"><hr>
<h2>Primitive Creation</h2>
<a name="anchor14"><hr>

<h3> modelCreateMeshRectangle </h3>

<p>
<b> Descritption: </b> Create a rectangular mesh.
</p>

Arguments:
<ul>
<li> <b> float x1 </b> - X coordinate of vertex 1
<li> <b> float y1 </b> - Y coordinate of vertex 1
<li> <b> float z1 </b> - Z coordinate of vertex 1
<li> <b> float x2 </b> - X coordinate of vertex 2
<li> <b> float y2 </b> - Y coordinate of vertex 2
<li> <b> float z2 </b> - Z coordinate of vertex 2
<li> <b> float x3 </b> - X coordinate of vertex 3
<li> <b> float y3 </b> - Y coordinate of vertex 3
<li> <b> float z3 </b> - Z coordinate of vertex 3
<li> <b> float x4 </b> - X coordinate of vertex 4
<li> <b> float y4 </b> - Y coordinate of vertex 4
<li> <b> float z4 </b> - Z coordinate of vertex 4
<li> <b> segments </b> (opt) - Number of rows/columns in rectangle (defaults to 1)
</ul>

Returns:
<ul>
<li> <b> int </b> - Mesh ID
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor15"><hr>

<h3> modelCreateBoneJoint </h3>

<p>
<b> Descritption: </b> Get the number of vertices in the model.
</p>

Arguments:
<ul>
<li> <b> string name </b> - Name of bone joint
<li> <b> float x </b> - X coordinate of bone joint
<li> <b> float y </b> - Y coordinate of bone joint
<li> <b> float z </b> - Z coordinate of bone joint
<li> <b> float xrot </b> - X rotation of bone joint (in degrees)
<li> <b> float yrot </b> - Y rotation of bone joint (in degrees)
<li> <b> float zrot </b> - Z rotation of bone joint (in degrees)
<li> <b> int parentID </b> - ID of parent joint (-1 is no parent, root joint)
</ul>

Returns:
<ul>
<li> <b> int </b> - Joint ID
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor16"><hr>

<h3> vertexSetCoords </h3>

<p>
<b> Descritption: </b> Move a vertex to a new position
</p>

Arguments:
<ul>
<li> <b> int vertexID </b> ID of vertex to move
<li> <b> float x </b> New X coordinate
<li> <b> float y </b> New Y coordinate
<li> <b> float z </b> New Z coordinate
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> IDs of any type are integers from zero to count-1 inclusive.
Negative numbers are invalid.
</p>

<a name="anchor17"><hr>

<h3> modelAddTexture </h3>

<p>
<b> Descritption: </b> Add an image file to a model as a texture.
</p>

Arguments:
<ul>
<li> <b> string filename </b> - Filename of texture to add (can be relative)
</ul>

Returns:
<ul>
<li> <b> int </b> - Texture ID
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor18"><hr>

<h3> vertexSetCoords </h3>

<p>
<b> Descritption: </b> Assign a texture to a group.
</p>

Arguments:
<ul>
<li> <b> int groupID </b> ID of group
<li> <b> int textureID </b> ID of texture for group
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> IDs of any type are integers from zero to count-1 inclusive.
Negative numbers are invalid.
</p>

<a name="anchor19"><hr>

<h3> faceSetTextureCoords </h3>

<p>
<b> Descritption: </b> Set the UV texture coordinates for a vertex of a polygon
</p>

Arguments:
<ul>
<li> <b> int faceID </b> Polygon ID
<li> <b> int vertexIndex </b> Index of polygon vertex to assign (0-2 for triangles)
<li> <b> float u </b> U (horizontal) coordinate for vertex on the group texture (0.0 - 1.0)
<li> <b> float v </b> V (vertical) coordinate for vertex on the group texture (0.0 - 1.0)
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> IDs of any type are integers from zero to count-1 inclusive.
Negative numbers are invalid.
</p>
<p>
Texture coordinates are from 0.0 to 1.0.  The origin (0.0, 0.0) is the 
<b>lower-left</b> corner of the texture, not the <b>upper-right</b> corner.
</p>

<a name="anchor20"><hr>
<h2>Selection manipulation</h2>
<a name="anchor21"><hr>

<h3> selectedRotate </h3>

<p>
<b> Descritption: </b> Rotate the selected vertices and bone joints around the
origin.
</p>

Arguments:
<ul>
<li> <b> float x </b> - Rotation around X axis in degrees
<li> <b> float y </b> - Rotation around Y axis in degrees
<li> <b> float z </b> - Rotation around Z axis in degrees
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> Rotation is around the origin.  If you want to rotate around an
arbitrary point (x0,y0,z0) you can use the following steps:
</p>

<ol>
<li> selectedTranslate ( -x0, -y0, -z0 )
<li> selectedRotate( x, y, z )
<li> selectedTranslate (  x0,  y0,  z0 )
</ol>

<a name="anchor22"><hr>

<h3> selectedTranslate </h3>

<p>
<b> Descritption: </b> Translate the selected vertices and bone joints.
</p>

Arguments:
<ul>
<li> <b> float x </b> - Units to translate on the X axis
<li> <b> float y </b> - Units to translate on the Y axis
<li> <b> float z </b> - Units to translate on the Z axis
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor23"><hr>

<h3> selectedScale </h3>

<p>
<b> Descritption: </b> Scale the distance between selected vertices and bone joints.
</p>

Arguments:
<ul>
<li> <b> float x </b> - Units to scale on the X axis
<li> <b> float y </b> - Units to scale on the Y axis
<li> <b> float z </b> - Units to scale on the Z axis
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor24"><hr>

<h3> selectedApplyMatrix </h3>

<p>
<b> Descritption: </b> Apply an arbitrary 4x4 matrix to the selected vertices and joints.
</p>

Arguments:
<ul>
<li> <b> float m1 </b> - First matrix element
<li> <b> m2 ... m14 </b>
<li> <b> float m15 </b> - Last matrix element
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> The m13, m14, m15 elements are the translation elements.
</p>

<a name="anchor25"><hr>

<h3> selectedWeldVertices </h3>

<p>
<b> Descritption: </b> Any selected vertcies that share coordinates
into one vertex.
</p>

Arguments:
<ul>
<li> None
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> This does not weld all verticies into one.  It only welds
vertices that are very, very close to each other.
</p>

<a name="anchor26"><hr>

<h3> selectedInvertNormals </h3>

<p>
<b> Descritption: </b> Invertes the normals on any selected faces (polygons (triangles)).
Effectively this turns objects inside-out so that light reflects off the opposite sides of the faces.
</p>

Arguments:
<ul>
<li> None
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor27"><hr>

<h3> selectedGroupFaces </h3>

<p>
<b> Descritption: </b> Assigns all selected faces to a group specified by name.
The group is created if it does not exist.
</p>

Arguments:
<ul>
<li> <b> string name </b> - Name of group for faces
</ul>

Returns:
<ul>
<li> <b> int groupID </b> - Group ID
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor28"><hr>

<h3> selectedAddToGroup </h3>

<p>
<b> Descritption: </b> Adds selected faces to an existing group.
</p>

Arguments:
<ul>
<li> <b> int groupID </b> ID of group
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> IDs of any type are integers from zero to count-1 inclusive.
Negative numbers are invalid.
</p>

<a name="anchor29"><hr>
<h2>Animation</h2>
<a name="anchor30"><hr>

<h3> modelCreateAnimation </h3>

<p>
<b> Descritption: </b> Creates a new animation
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
<li> <b> string name </b> - Name of new animation
<li> <b> int frameIndex </b> - Frame count
<li> <b> float fps </b> - Frames per second
</ul>

Returns:
<ul>
<li> <b> int </b> - AnimationID
</ul>

<p>
<b> Notes: </b> Animation IDs are unique to their type, but can be the same for
two different types.  In other words, the first skeletal animation and the first
frame animation are always zero (0).  This is why you must use an
animation type/mode string when you specify an animation ID.
</p>

<a name="anchor31"><hr>

<h3> setAnimByIndex </h3>

<p>
<b> Descritption: </b> Sets the current animation from a mode string
and an ID value.
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
<li> <b> int animID </b> - Animation ID
</ul>

Returns:
<ul>
<li> <b> bool </b> - Returns true if animation exists, false otherwise.
</ul>

<p>
<b> Notes: </b> IDs of any type are integers from zero to count-1 inclusive.
Negative numbers are invalid.
</p>

<p>
You can set frame animation vertex positions or skeletal animation keyframes
directly using functions below.  You only need to use this function if you want
to use matrix transformations to manipulate several animated primitives at once;
for example, translating or rotating many vertex positions at one time.
</p>

<a name="anchor32"><hr>

<h3> setAnimByName </h3>

<p>
<b> Descritption: </b> Sets the current animation from a mode string
and a name string.
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
<li> <b> string name </b> - Name of animation
</ul>

Returns:
<ul>
<li> <b> bool </b> - Returns true if animation exists, false otherwise.
</ul>

<p>
<b> Notes: </b> You can set frame animation vertex positions or skeletal animation keyframes
directly using functions below.  You only need to use this function if you want
to use matrix transformations to manipulate several animated primitives at once;
for example, translating or rotating many vertex positions at one time.
</p>

<a name="anchor33"><hr>

<h3> animSetFrame </h3>

<p>
<b> Descritption: </b> Sets the current frame of the current animation.
</p>

Arguments:
<ul>
<li> <b> int frameIndex </b> - Frame index of current animation (0 to frame_count-1)
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> You can set frame animation vertex positions or skeletal animation keyframes
directly using functions below.  You only need to use this function if you want
to use matrix transformations to manipulate several animated primitives at once;
for example, translating or rotating many vertex positions at one time.
</p>

<a name="anchor34"><hr>

<h3> animGetCount </h3>

<p>
<b> Descritption: </b> Get the number of animations of a specified type.
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
</ul>

Returns:
<ul>
<li> <b> int </b> - The number of animations of this type
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor35"><hr>

<h3> animGetName </h3>

<p>
<b> Descritption: </b> Get the name of an animation.
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
<li> <b> int animationID </b> - The ID number of the animation
</ul>

Returns:
<ul>
<li> <b> string </b> - The animation name
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor36"><hr>

<h3> animGetFrameCount </h3>

<p>
<b> Descritption: </b> Get the frame count of an animation.
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
<li> <b> int animationID </b> - The ID number of the animation
</ul>

Returns:
<ul>
<li> <b> int </b> - The frame count of the animation
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor37"><hr>

<h3> animSetName </h3>

<p>
<b> Descritption: </b> Change the name of the specified animation.
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
<li> <b> int animationID </b> - The ID number of the animation
<li> <b> string name </b> - New animation name
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor38"><hr>

<h3> animSetFrameCount </h3>

<p>
<b> Descritption: </b> Change the frame count of the specified animation.
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
<li> <b> int animationID </b> - The ID number of the animation
<li> <b> int frameCount </b> - New animation frame count
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor39"><hr>

<h3> animSetFPS </h3>

<p>
<b> Descritption: </b> Change the animation speed.
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
<li> <b> int animationID </b> - The ID number of the animation
<li> <b> float fps </b> - New animation speed in frames per second
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor40"><hr>

<h3> animClearFrame </h3>

<p>
<b> Descritption: </b> Clear an animation frame so that all primitives are in
their default position and orientation.
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
<li> <b> int animationID </b> - The ID number of the animation
<li> <b> int frame </b> - Frame number (0 to frame_count-1, inclusive)
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor41"><hr>

<h3> animCopyFrame </h3>

<p>
<b> Descritption: </b> Copy an animation frame to another frame so that each
frame is identical.
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
<li> <b> int animationID </b> - The ID number of the animation
<li> <b> int src </b> - Source frame number (0 to frame_count-1, inclusive), the 
frame you want to make a copy of
<li> <b> int dest </b> - Destination frame number (0 to frame_count-1, inclusive), 
the frame you want to copy to
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor42"><hr>
<h2>Animation set manipulation</h2>
<a name="anchor43"><hr>

<h3> animMove </h3>

<p>
<b> Descritption: </b> Move an animation from one index to another.  This changes
the order in which animations are listed.
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
<li> <b> int animIndex1 </b> - The current animation index (ID number)
<li> <b> int animIndex2 </b> - The new animation index
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> Animation indices and IDs are the same thing.  If you move an
animation its ID changes to its new index position.  Other animation IDs may
be changed as well if they appear after the old or new animation index.
</p>

<a name="anchor44"><hr>

<h3> animCopy </h3>

<p>
<b> Descritption: </b> Create a new animation that is a copy of an existing
animation.
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
<li> <b> int animationID </b> - The ID number of the animation
<li> <b> string name </b> - Name of new animation
</ul>

Returns:
<ul>
<li> <b> int </b> - ID number of the new animation
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor45"><hr>

<h3> animSplit </h3>

<p>
<b> Descritption: </b> Split an animation into two separate animations at a
specified frame.
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
<li> <b> int animationID </b> - The ID number of the animation
<li> <b> string name </b> - Name of new animation
<li> <b> int frame </b> - The frame at which to split the animation (0 to frame_count-1, inclusive)
</ul>

Returns:
<ul>
<li> <b> int </b> - ID number of the new animation
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor46"><hr>

<h3> animJoin </h3>

<p>
<b> Descritption: </b> Join two animations together into one.
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
<li> <b> int animationID1 </b> - The ID number of the animation to join to
<li> <b> int animationID2 </b> - The ID number of the animation to join from
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> In case the above argument descriptions are unclear, 
animation 2 will be appended to animation 1.
</p>

<a name="anchor47"><hr>

<h3> animConvertToFrame </h3>

<p>
<b> Descritption: </b> Convert a skeletal animation to a frame animation.
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
<li> <b> int animationID </b> - The ID number of the animation to convert
<li> <b> string name </b> - The name of the new animation
<li> <b> int frame_count </b> - The number of frames in the new animation
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> The two animations will complete in the same amount of time.
The existing animation may be resampled if the frame count of
the new animation is different from the existing animation.  The new animation's
frames per second will be changed to make the two animations compelte in the same
amount of time.
</p>

<p> In other words:  <code>frame_count1 * fps1 = frame_count2 * fps2</code>
</p>

<a name="anchor48"><hr>
<h2>Mode-specific animation manipulations</h2>
<a name="anchor49"><hr>

<h3> skelAnimSetKeyframe </h3>

<p>
<b> Descritption: </b> Set a keyframe for a specified animation, frame, and
joint.  Keyframe may be rotation or translation.
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
<li> <b> int animationID </b> - The ID number of the animation
<li> <b> int frame </b> - The index of the frame (0 to frame_count-1, inclusive)
<li> <b> int jointID </b> - The ID number of the joint
<li> <b> bool isRotation </b> - Is true for rotation keyframe, false for translation keyframe
<li> <b> float x </b> - Coordinate or rotation on X axis
<li> <b> float y </b> - Coordinate or rotation on Y axis
<li> <b> float z </b> - Coordinate or rotation on Z axis
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor50"><hr>

<h3> skelAnimDeleteKeyframe </h3>

<p>
<b> Descritption: </b> Deletes a keyframe for a specified animation, frame, and
joint.  Keyframe may be rotation or translation.
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
<li> <b> int animationID </b> - The ID number of the animation
<li> <b> int frame </b> - The index of the frame (0 to frame_count-1, inclusive)
<li> <b> int jointID </b> - The ID number of the joint
<li> <b> bool isRotation </b> - Is true for rotation keyframe, false for translation keyframe
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> The joint will have its default position or orientation after
calling this function.  If there are rotation and translation keyframes, you must
call this function twice to delete both; once with isRotation true, and once
with isRotation false.
</p>

<a name="anchor51"><hr>

<h3> frameAnimSetVertex </h3>

<p>
<b> Descritption: </b> Deletes a keyframe for a specified animation, frame, and
joint.  Keyframe may be rotation or translation.
</p>

Arguments:
<ul>
<li> <b> string mode </b> - Animation mode: &quot;skeletal&quot; or &quot;frame&quot;
<li> <b> int animationID </b> - The ID number of the animation
<li> <b> int frame </b> - The index of the frame (0 to frame_count-1, inclusive)
<li> <b> int vertexID </b> - The ID number of the joint
<li> <b> float x </b> - New X coordinate
<li> <b> float y </b> - New Y coordinate
<li> <b> float z </b> - New Z coordinate
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor52"><hr>
<h2>Selection</h2>
<a name="anchor53"><hr>

<h3> modelSelectAll </h3>

<p>
<b> Descritption: </b> Selects all primitives (vertices, faces, and bone joints)
</p>

Arguments:
<ul>
<li> None
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor54"><hr>

<h3> modelSelectAllVertices </h3>

<p>
<b> Descritption: </b> Selects all vertices
</p>

Arguments:
<ul>
<li> None
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor55"><hr>

<h3> modelSelectAllFaces </h3>

<p>
<b> Descritption: </b> Selects all faces
</p>

Arguments:
<ul>
<li> None
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor56"><hr>

<h3> modelSelectAllGroups </h3>

<p>
<b> Descritption: </b> Selects all faces of all groups
</p>

Arguments:
<ul>
<li> None
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor57"><hr>

<h3> modelSelectVertices </h3>

<p>
<b> Descritption: </b> Selects all vertices
</p>

Arguments:
<ul>
<li> None
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor58"><hr>

<h3> modelSelectVertex </h3>

<p>
<b> Descritption: </b> Selects specified vertex
</p>

Arguments:
<ul>
<li> <b> int vertexID </b> - ID of vertex to select
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> IDs of any type are integers from zero to count-1 inclusive.
Negative numbers are invalid.
</p>

<a name="anchor59"><hr>

<h3> modelSelectFace </h3>

<p>
<b> Descritption: </b> Selects specified face
</p>

Arguments:
<ul>
<li> <b> int faceID </b> - ID of face to select
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> IDs of any type are integers from zero to count-1 inclusive.
Negative numbers are invalid.
</p>

<a name="anchor60"><hr>

<h3> modelSelectGroup </h3>

<p>
<b> Descritption: </b> Selects faces of specified group
</p>

Arguments:
<ul>
<li> <b> int groupID </b> - ID of group to select
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> IDs of any type are integers from zero to count-1 inclusive.
Negative numbers are invalid.
</p>

<a name="anchor61"><hr>

<h3> modelSelectJoint </h3>

<p>
<b> Descritption: </b> Selects specified joint
</p>

Arguments:
<ul>
<li> <b> int jointID </b> - ID of joint to select
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> IDs of any type are integers from zero to count-1 inclusive.
Negative numbers are invalid.
</p>

<a name="anchor62"><hr>

<h3> modelUnselectAll </h3>

<p>
<b> Descritption: </b> Unselects all primitives (vertices, faces, bone joints)
</p>

Arguments:
<ul>
<li> None
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor63"><hr>
<h2>Logging</h2>
<a name="anchor64"><hr>

<h3> logDebug </h3>

<p>
<b> Descritption: </b> Send a message string to the debug log.
</p>

Arguments:
<ul>
<li> <b> string message </b> - message to log
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor65"><hr>

<h3> logWarning </h3>

<p>
<b> Descritption: </b> Send a message string to the warning log.
</p>

Arguments:
<ul>
<li> <b> string message </b> - message to log
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>

<a name="anchor66"><hr>

<h3> logError </h3>

<p>
<b> Descritption: </b> Send a message string to the error log.
</p>

Arguments:
<ul>
<li> <b> string message </b> - message to log
</ul>

Returns:
<ul>
<li> None
</ul>

<p>
<b> Notes: </b> None
</p>
